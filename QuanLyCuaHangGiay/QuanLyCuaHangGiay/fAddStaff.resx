<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABJxJREFUeF7t
        m0uMFEUcxpd3EIl3iIKJaEDDSwwEEryoBxNjoichWdTsHjx55MpTCRjDQw8ciQc9SPAmKAYPEB8hwAUu
        SDSACyzs1PSyCUz3jOX3z34btqtrdqqre3Z60/1LvgBT9f/qX1M11VXdTV9FRUVFRUX30FrPbjRGXm42
        1cfQV81m/Sx0GxqFNCV/l89Qpo5BH2n9cJXE0mbmEYb1DejIUXRqmJ300b0oCg7D61XaFhsZMXT6XeiC
        pTMZpc43m7V30MYsNlcsomh0S6tVv2JPPj+hjctoazOb7T0YkQWYpl8iuZaZbBfVjKL6F2h7PtPoDVqP
        vogRuWRJcFqEti9qHbzAdKYXjMAbSOKhmVQPpKJIbWVa0wM6/xYaHjMS6aXGkNObTK+7sPMNI4Ei6BFm
        wutMsztgc7ISDSmj4SJpBOvSS0w3X7Qeegqjf83SaKGEWXBVcmXa+cFdnbXRokkuy0w7H2SVhfF/ZkMF
        VisMg41MPxvj29v6n0YDM0DqQi7b5vG9va0BF6kh++dplMUjeJvd8AdGnqOvvsEIzMVubSf+7bNNbkms
        eIiXpdxB6jy74QeOoevtxh31PRKfRxt8icF2fPbIqDOVUDfYxnD5Gc7DZyeNOk4KQ7WGNunhIcdqPIVu
        IeHEIQWL0iaU3THqWqSGbAuYeKJcbppYYtoLl+6DtEgHGpzl+/vDVWMvbWJoPfKsHGdtMSI5WEkdVo+B
        juyzxTjoJi3S0WjUXrGYpdEArWLgi12A6X0iWT84IWWsFgPlg8n67vLaHWI0PrGZpVDYbm8us2vS4ojF
        Tn3KogTiIV709NUg7dxB0HHDxEPBv1rfX0LLBLLQQR/wnwm0frBUPOzeqfQ1Ld1B0DnDxEsY6Sta311E
        W2e0Hn5aYm2eHvqZtu4g6B/DJIu+lWlP645IXcR8Z3hk0V+0dgdBuR578VveQ+uOyFXE5pFBD2jtDoIi
        wySrsOCp92jfFqmDunkfvB7T3h0EZV15LVL9tG8L6uywx2aS1xdQM0wyCdN6F607grq7bR4ZdJ/W7iDo
        b8Mki05hYXN+zid1cfn7weLjK69F8BfDxFe/a31rIW2dkRjE/mF4+eoMbd1BUA4bofpdrWvP0TJB542Q
        WiYehqePvDZCA4ZJWo3hKLqOdjEwxXHGf/IF4zd/BJ/NYXEMHskzPoNQH9LOHa2DFXYzJ7W95GFGPIPy
        00Z90WkpY7UYKHsf8r40al1/nlbpQPBN08xFOLrup0WMjMfhz2wxDrpBi/Sg0UMWw07q1g0RHKO9boh8
        Tov0yG/YZuqgwtwSazRqq2njB0x+NU0d9SOOwovxZ5aryXF62NYMF51lN/zBlCz3bXFMv3I/GBG4FjST
        jRRWobyax/TzAd9oeR+OClyJ89qbd1O/Ide5TDtfSv2CxATYpLyGhia/5loUqUyPwdKA3VV5X5KagKe0
        e0YivdBteYrFtKaXUr8oOQFW3PK+KjsZWX2R2E9Got3QGZl5bLZYYETK+7q8iWyfMU0PIPkbyc4467qc
        5+G1lrYzE63VcoxgP+T6X2b6p7qZWlFRUVFRkQd9ff8D9Ccvrqn9F7oAAAAASUVORK5CYII=
</value>
  </data>
</root>